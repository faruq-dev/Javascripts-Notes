const sum = (a, b) => {
  return a + b;
};

const result = sum(1, 5);
console.log(result);

//উপরে একটা অ্যারো ফাংশন লিখলাম যাতে প্যারামিটার হিসেবে মাত্র দুইটা প্যারামিটার (a, b) দিয়েছি। কিন্ত এখানে যদি অনেকগুলো প্যারামিটার থাকে যেমন (a,b,c,d,e,f,g,h), তাহলে এতগুলা প্যারামিটার লেখা এবং সেই প্রতিটা প্যারামিটারের জন্য আলাদা করে ভ্যালু এসাইন করা খুব সময় সাপেক্ষ কাজ। এই সমস্যা সমাধান করে ...rest প্যারামিটার। উদাহরন নিচেঃ



// ...rest Parameter Example:
{
  const sum = (a, b, ...rest) => { //এখানে ফাংশনের প্যারামিটার হিসেবে (a, b) এর পাশাপাশি তিনটা ডট দিয়ে ...rest লিখেছি, এই ...rest হলো a ও b এর পর যদি আরো প্যারামিটার থাকে যেমন c,d,e,f,g সেগুলোকে স্টোর করবে। অর্থাৎ a ও b পরে আরো যতগুলা প্যারামিটারই থাকুক না কেন সেগুলা না লিখে তিনটা ডট দিয়ে ...rest লিখলেই হবে। ফাংশনকে কল করার সময় 1 ও 2 এর পর যতগুলা আর্গুমেন্ট দেওয়া হবে সেগুলা ...rest এর মধ্যে অ্যারে আকারে জমা হবে।
    let total = a + b;

    for (let eachRestValue of rest) {
      total = total + eachRestValue;
    }
    return total;
  };

  const result = sum(1,2,3,4,5,6);
  console.log(result);
}

// এই ...rest এক ধরনের ভ্যারিয়েবলের মত কাজ করে, এর মধ্যে a ও b বাদে বাকি প্যারামিটারের ভ্যালু গুলা অ্যারে আকারে জমা থাকে।

// যেহেতু ...rest এর মধ্যে ভ্যালু গুলো অ্যারে [] আকারে জমা থাকে তাই একে সরাসরি a+b এর সাথে যোগ করা যাবে না

// অর্থাৎ let total = a + b + rest; এভাবে লেখা যাবে না, a+b এর সাথে rest কে যোগ করতে হলে for of লুপ চালাতে হবে

// তাই প্রথমে a + b কে যোগ করে total ভ্যারিয়েবলের মধ্যে রাখলাম।

// এরপর for লিখে ব্রাকেটে let দিয়ে eachRestValue নামে ভ্যারিয়েবল নিলাম, এই eachRestValue ভ্যারিয়েবলটা শুধু rest এর মধ্যে থাকা প্রতিটা ভ্যালুকে স্টোর করে (যেমন 3,4,5,6)। এরপর লিখলাম of rest, এটা হলো for of লুপ।

// এরপর লুপের কার্লি ব্রেসে লিখলাম total = total + eachRestValue; এর মানে total ভ্যারিয়েবলের মধ্যে total এর বর্তমান ভ্যালুর সাথে eachRestValue অর্থাৎ rest এর প্রতিটা ভ্যালুকে  একে একে যোগ করে স্টোর করো।

// এরপর লুপের কার্লিব্রেসের বাইরে লিখতে হবে return total; মানে rest এর সব ভ্যালু একে একে total এর সাথে যোগ করার পর total ভ্যালু টা রিটার্ন করো।

// রিটার্ন ভ্যালুটা চলে যাবে ১৪ লাম্বার লাইনে sum ফাংশনের ভেতর।

// এরপর sum কে কনসোল করার সময় sum(1,2,3,4,5,6) ব্রাকেটে যতগুলা আর্গুমেন্ট দেওয়া হোক সবগুলা যোগ হয়ে কনসোলে প্রিন্ট হবে, এখানে 1,2 হলো a ও b এর ভ্যালু, আর 3,4,5,6 হলো rest এর ভ্যালু।



//****** বিশেষ নোট
//শুধুমাত্র ১৪ লাম্বার লাইনে ব্রাকেটে প্যারামিটার লেখার সময় rest এর আগে তিনটা ডট দিয়ে ...rest এভাবে লিখতে হবে, বাকি সময় ডট না দিলেও হবে

//rest কে rest নাম দেওয়া বাধ্যতামূলক না, তিনটা ডট দিয়ে যেকনো নাম দেওয়া যায় যেমন ...args বা ...sum ইত্যাদি

