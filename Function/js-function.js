//জাভাস্ক্রীপ্টে ফাংশন সাধারনত ২ ভাবে লেখা যায়ঃ
// ১- Function Declaration বা Function Definition
// ২- Function Expression



//***************** Function Declaration বা Function Definition *****************/

//Syntax *****
// function name (parameter1, parameter2, parameter3){
//     //code block to be executed
// }


function multiplication (a,b){
    console.log(a * b);
};

multiplication(5,2) // 5 and 2 হলো আর্গুমেন্ট (a ও b এর ভ্যালু)

// Function Declaration দিয়ে ফাংশন লিখতে হলে প্রথমেই আমাদের "function" কীওয়ার্ডটা লিখতে হবে, এরপর কীওয়ার্ডের পাশে ১টা স্পেস দিয়ে ফাংশনের একটা মিনিংফুল নাম দিতে হবে, আমি নাম দিলাম multiplication.

// নাম দেওয়ার ঠিক পরেই একটা প্যারেন্থিসিস () এবং একটা কার্লি ব্রেস {} দিতে হবে, প্যারেন্থিসিসে () যা থাকবে তাকে বলা হয় parameter, আর কার্লি ব্রেসের অংশকে বলা হয়য় ফাংশন বডি।

// () প্যারামিটারের মধ্যে অনেক গুলো প্যারামিটার নেওয়া যায় কমা (,) দিয়ে দিয়ে, আমি (a,b) দুইটা প্যারামিটার নিলাম, এই প্যারামিটার গুলাও একধরনের ভ্যারিয়েবল, এই a ও b এর মধ্যেও ডাটা স্টোর থাকে ভ্যারিয়েবলের মত। এই a ও b প্যারামিটারের মধ্যে পরবর্তিতে ভ্যালু assign করব(এখন empty আছে)।

// এই প্যারামিটার গুলো ফাংশনের জন্য ইনপুট হিসেবে কাজ করে, অর্থাৎ এই প্যারামিটারের ভ্যালু গুলা নিয়েই ফাংশন কাজ করে।

//এরপর কার্লি ব্রেস {} বা ফাংশন বডিতে ফাংশনের কাজটা কি সেটা লিখতে হবে, এখানে চাইলে consol.log করে এখানেই কাজ/প্রিন্ট করা যায় অথবা return কীওয়ার্ড দিয়ে একটা রেজাল্ট রিটার্ন করানো যায় যা একটা ভ্যারিয়েবলে স্টোর করতে হয়।

// ফাংশন বডিতে আমি কনসোলের মধ্যে a * b দিলাম অর্থাত a প্যারামিটারের ভ্যালুকে b প্যারামিটারের ভ্যালু দিয়ে গুন করে গুনফলকে প্রিন্ট করো

// এবার কনসোল করলে কিন্ত কিছুই প্রিন্ট হবেনা, কারন ফাংশনকে কাজ করাতে হলে তাকে অবশ্যই call করতে হয়, কিন্ত আমরা multiplication নামের ফাংশনটিকে কোথাও কল করিনাই

// ফাংশনটাকে কল করার জন্য ফাংশন বডি থেকে বের হয়ে ফাংশনের নিচে বা উপরে ফাংশনটার নাম multiplication লিখতে হবে, শুধু নাম লিখলেই হবেনা, নামের সাথে একটা প্যারেন্থিসিস দিতে হবে, multiplication() এভাবে লিখতে হবে, তবেই ফাংশনটা কল হবে।

// এরপর multiplication এর প্যারেন্থিসিস () এ ব্রাকেটের মধ্যে ২টা আর্গুমেন্ট দিতে হবে, এই আর্গুমেন্টগুলাই প্যারামিটার (a, b) এর ভ্যালু হিসেবে কাজ করবে, প্যারামিটারে ব্রাকেটে যতগুলা প্যারামিটার থাকবে যেমন (a, b, c, d, e), ফাংশন কল করার সময় ততগুলা আর্গুমেন্ট দিতে হবে

//আমরা multiplication ফাংশনকে কল করার সময় আর্গুমেন্ট হিসাবে দিলাম (5, 2), এখানে প্রথম আর্গুমেন্ট 5 কাজ করবে প্রথম প্যারামিটার a এর ভ্যালু হিসেবে। ২য় আর্গুমেন্ট 2 কাজ করবে ২য় প্যারামিটার b এর ভ্যালু হিসেবে, অর্থাৎ a = 5, b = 2 হবে

// এবার কনসোল করলে a * b গুন হয়ে ১০ প্রিন্ট হবে



//নোটঃ *****  ফাংশনকে যদি কোনো ভ্যারিয়েবলে স্টোর করে সেই ভ্যারিয়েবলকে কনসোল করতে চাই, তাহলে ফাংশন বডিতে console.log(a + b); না দিয়ে return কীওয়ার্ড ব্যবহার করতে হবে। return a + b; এভাবে লিখতে হবে।

function addition (a,b){
    return a + b; //এখানে return কীওয়ার্ড ব্যবহার করলাম, এর মানে হলো a ও b কে যোগ করে যোগফলটা addition ফাংশনের ভেতর স্টোর/রিটার্ন করো। এরপর addition ফাংশনকে যেকোনো ভ্যারিয়েবলে রেখে কনসোল করলে তবেই রেজাল্টটা দেখা যাবে।
};

//**** যখন জাভাস্ক্রিপ্ট ফাংশন return কিওয়ার্ড পর্যন্ত পৌছায় তখন ফাংশনটা এক্সিকিউট হওয়া থেমে যায় এবং রেজাল্টটা return করে দেয়

// returned ভ্যালুটা যেখানে ফাংশনটাকে কল করা হবে সেখানে চলে যায়, যেমন নিচে result ভ্যারিয়েবলে addition ফাংশনকে কল করা হয়েছে, সেখানেই return এর ভ্যালুটা চলে গিয়েছে (স্টোর হয়েছে)।

const result = addition(5,10);
console.log(result);



//*** একই ফাংশনকে বিভিন্ন জায়গায় বিভিন্ন আর্গুমেন্ট দিয়ে call করা যায়, এতে বার বার ফাংশন লিখতে হয়না, একই ফাংশনকে বিভিন্ন আর্গুমেন্ট দিয়ে ব্যবহার করা যায়, যেমনঃ

function multiply (a, b){
    return a * b;
}


//এখানে নিচে একই ফাংশন (multiply) কে ৩ জায়গায় কল করলাম, result1, result2, ও result3 তে একই ফাংশন কল করলাম, কিন্ত প্রতিবার আলাদা আলাদা আর্গুমেন্ট দিয়েছি, যেমন প্রথমে (5,10) দিয়েছি, ২য় বার (2,4) দিয়েছি

// এর ফলে একই ফাংশন ৩ জায়গায় ইউজ করা গেলো
const result1 = multiply(5,10); 

const result2 = multiply(2,4);

const result3 = multiply(6,7);

console.log(result1);
console.log(result2);
console.log(result3);