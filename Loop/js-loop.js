//***************** The for loop ****************/

//for loop structure (syntax)
{
  // for (initialization; condition; increment/decrement) {
  //     //loop body (code block to be executed)
  // }
  // প্রথমে ছোট হাতে for লিখে তার ডানে ব্রাকেটে ৩ টা এক্সপ্রেশন লিখতে হয়, expression 1 কে বলা হয় initialization, expression 2 কে বলা হয় condition, এবং expression 3 কে বলা হয় increment বা decrement. এরপর কার্লি ব্রেসের ভেতরে লুপের কোড ব্লক লিখতে হয় (একে লুপ বডিও বলা হয়)।
  // expression 1 (initialization) প্রথমের একবার রান করে, লুপ বডিতে প্রবেশের আগেই সে একবার রান করবে। এজন্য একে initialization বলে
  // expression 2 (condition) - এখানে একটা কন্ডিশন লেখা হয় যেটার উপর ভিত্তি করে লুপ বডিতে থাকা কোডটা রান করবে।
  // expression 3 (increment/decrement) - লুপ বডির কোড ব্লকটা প্রতিবার রান হয়ার পরেই expression 3 এক্সিকিউট হবে যার ফলে লুপটা চলতে থাকবে
  // এই ৩ টা এক্সপ্রেশনের মাঝখানে কমা দিলে হবেনা, সেমিকোলন দিতে হবে (;)। যেমন for (expres 1; expres 2; expres 3)
}

//for loop example
{
  for (i = 1; i <= 10; i++) {
    console.log("Subhan Allah");
  }
  //এখানে প্রথমে i নামে একটা ভ্যারিয়েবল ডিক্লেয়ার করলাম যার ভ্যালু দিলাম 1, এর মানে লুপটা 1 থেকে শুরু হবে

  //এরপর সেমিকোলন(;) দিয়ে i <= 10 দিলাম, এখানে i এর মান যদি 10 থেকে ছোট অথবা সমান হয় তাহলে কন্ডিশন true হবে, আর কন্ডিশন ট্রু হলে জাভাস্ক্রিপ্ট তার লুপ বডিতে ঢুকে যাবে এবং বডিতে থাকা console.log("Subhan Allah"); প্রিন্ট করবে ১ বার।

  // ১ বার Subhan Allah প্রিন্ট করা হয়ে গেলে expression 3 তে থাকা i++ এক্সিকিউট হবে, i++ এর মানে হলো i এর মান এখন যা আছে তার সাথে ১ যোগ করো। i এর বর্তমান ভ্যালু ১ এর সাথে আরো ১ যোগ করলে i এর মান হয়ে যাবে ২।

  // এরপর জাভাস্ক্রিপ্ট আবার expression 2 তে ফিরে আসবে, এবং i এর নতুন মান ২ কি ১০ ছোট বা সমান কিনা চেক করবে, যদি ট্রু হয় তাহলে আবার সে লুপ বডিতে প্রবেশ করবে এবং আবার কনসোলে Subhan Allah প্রিন্ট করবে। এরপর সে আবার লুপ বডি থেকে বের হয়ে expression 3 তে গিয়ে i++ করবে, যেহেতু এখন i = 2 আছে তাই i++ করলে i = 3 হয়ে যাবে।

  // এর পর সে আবার expression 2 যাবে, এবং গিয়ে i এর বর্তমান ভ্যালু ৩ কে ১০ এর সাথে কম্পেয়ার করে ট্রু হলে আবার লুপ বডিতে ঢুকে কনসোলে Subhan Allah প্রিন্ট করবে, এরপর আবার expression 3 তে চলে যাবে i++ করার জন্য।

  // এভাবেই চক্রাকারে লুপ চলতে থাকবে যতক্ষন না i এর মানে ১০ থেকে বড় না হয়ে যায়। i এর মান ১০ থেকে বড় হয়ে গেলেই লুপ থেমে যাবে

  // ১ম বার initialize করার পর expression 1 (i=1) এর আর কাজ নাই, এরপর শুধু (i<=10) -> (loop body) -> (i++) এভাবেই চক্রাকারে চলতে থাকবে।
}

//Another for loop example
{
  for (let i = 0; i <= 10; i = i + 2) {
    console.log(i);
  } // 0 থেকে 10 এর মধ্যে জোড় সংখ্যাগুলো বের করার ল্যুপ
}
{
  for (let i = 1; i <= 10; i = i + 2) {
    console.log(i);
  } // 0 থেকে 10 এর মধ্যে বেজোড় সংখ্যাগুলো বের করার ল্যুপ
}

{
  for (let i = 1; i <= 10; i++) {
    console.log(i);
  } //1 থেকে 10 পর্যন্ত সংখ্যা কনসোলে প্রিন্ট করার নিয়ম (ইনক্রিমেন্ট করে, অর্থাৎ i++ হলো ইনক্রিমেন্ট, i-- হলো ডিক্রিমেন্ট )
}

//***লুপের এক্সপ্রেশনে ভ্যারিয়েবল ডিক্লেয়ার করতে হবে let দিয়ে



//***************The while Loop *****************/

//while লুপ তার লুড বডিতে থাকা কোড ব্লককে নিয়ে ততক্ষন লুপ আকারে রান করে যতক্ষন while এর ব্রাকেটে থাকা কন্ডিশন ট্রু হয়

//Syntax
// {
//   let i = 0; // while লুপের initialization বা ভ্যারিয়েবল লুপ লেখার আগেই লাইনেই ডিক্লেয়ার করে নিতে হয়
//   while (condition){
//     //code block to be executed
//   }
// }

//While loop example
{
  let i = 0;
  while (i < 10) {
    console.log(i);
    i++; //for লুপের সাথে এর পার্থক্য হলো for লুপে ইনক্রিমেন্ট/ডিক্রিমেন্ট ও সকল কন্ডিশন for এর পাশে প্যারেন্থেসিস     ব্রাকেটে লিখতে হয়, কিন্ত while লুপে কার্লিব্রেসের মধ্যে কোড ব্লকে ইনক্রিমেন্ট/ডিক্রিমেন্ট (যেমন i++) লেখা যায়।
  }

  //অর্থাৎ while লুপে initialization থাকে সবার উপরে, এরপর while এর ব্রাকেটে () থাকে কন্ডিশন, আর লুপ বডিতে থাকে ইনক্রিমেন্ট/ডিক্রিমেন্ট
}

{
  let cars = ["BMW", "Volvo", "Toyota", "Hyundai", "Honda"];

  for (let i = 0; i < cars.length; i++) {
    console.log(cars[i]);
  }
} //এটাকে আমরা for loop দিয়ে করলাম, এবার এটাকেই নিচে while loop দিয়ে করব।

{
  let cars = ["BMW", "Volvo", "Toyota", "Hyundai", "Honda"];
  let i = 0;

  while (i < cars.length) {
    console.log(cars[i]);
    i++;
  }
} //while loop দিয়ে করলাম

//*** for লুপের সাথে while লুপের মূল পার্থক্য হলো for লুপে কতক্ষন iteration হবে বা লুপটা কতবার চলবে সেটা আমাদের আগেই জানা থাকে। কিন্ত while লুপের ক্ষেত্রে iteration কতক্ষন হবে বা লুপটা কতবার চলবে সেটা আমাদের আগে থেকে জানা থাকতেও পারে, নাও থাকতে পারে



//**************** The do while loop ******************/


//while লুপের একটা ভ্যারিয়েন্ট হলো do while লুপ। while এর সাথে do while লুপের পার্থক্য হলো do while লুপ প্রথমে একবার লুপ বডির কোড ব্লকটাকে রান করবেই (কন্ডিশন ট্রু বা ফলস যাই হোক)। একবার রান করার পর সে কন্ডিশনকে চেক করবে, কন্ডিশন ট্রু হলে সে তখন লুপ আকারে রিপিট করতে থাকবে।

//  কিন্ত while লুপে কন্ডিশন ট্রু না হলে একবারও কোড ব্লক রান হবেনা

//Example and Syntax 
{
  let i = 0;
  do {
    console.log('The number is ' + i); //do এর কার্লি ব্রেসে লেখা কোড ব্লক প্রথমেই একবার রান হবে কন্ডিশন ট্রু ফলস যাই হোক
    i++;
  } while (i < 10);
} // do while লুপে while শেষে লিখতে হয় এবং while এর ব্রাকেটে কন্ডিশন লিখতে হয়, এখানে লেখা কন্ডিশন যদি ফলসও হয় তবুও কোড ব্লক একবার রান হয়ে The number is 0 প্রিন্ট হবে, কন্ডিশন ট্রু হলে উপরের কোড ব্লক লুপ আকারে চলতে থাকবে যতক্ষপ্ন কন্ডিশন ফলস না হয়।




//****************** the For of Loop ******************/

// for of লুপ বিভিন্ন iterable object যেমন Arrays, Strings, Maps ইত্যাদির ভ্যালুর মধ্যে দিয়ে লুপ পরিচালনা করে, অর্থাৎ সে অ্যারে বা স্ট্রিং এর ভেতরে ঢুকে অ্যারে বা স্ট্রিং এর ভ্যালু গুলা একটার পর একটা নিয়ে লুপ চালাতে পারে।

//যেমন ["Apple", "Orange", "Mango"] এটা একটা অ্যারে, for of লুপ এই অ্যারে ভেতরে ঢুকে প্রথমে Apple নিয়ে লুপ চালাবে, এরপর আবার ঢুকে Orange নিয়ে লুপ চালাবে, এভাবে ধাপে ধাপে এই অ্যারের সবগুলা ভ্যালু নিয়ে লুপ চালাবে যতক্ষন কন্ডিশন ট্রু হয়।

//Syntax
{
  // for (variable of iterable){
  //   //code block to be executed
  // }
  
  //প্রথমে for লিখে পাশের ব্রাকেটে (variable of iterable), এখানে variable এর জায়গায় ভ্যারিয়েবলের নামটা লিখতে হবে এরপর "of" কীওয়ার্ডটা লিখতে হবে, এরপর যেই অ্যারে বা স্ট্রিং এর ভেতর দিয়ে লুপ চালাতে চাই তার নাম লিখতে হবে। এরপর কার্লি ব্রেসের ভেতর কোড ব্লক থাকবে।
}

//Example
{
  let cars = ['Audi','Lamborghini','Bugatti', 'Toyota'];
  let car;

  for (car of cars) {
    console.log(car);
  }

  // প্রথমে for কীওয়ার্ডটা লিখতে হবে এরপর ব্রাকেটে variable এর নাম car লিখতে হবে, এরপর of কীওয়ার্ডটা লিখতে হবে
  //এরপর যে অ্যারের ভেতর দিয়ে লুপ চালানো হবে সেই অ্যারের নাম লিখতে হবে, এখানে অ্যারের নাম cars
  //car of cars এর মানে হলো লুপ চালানো হলে cars অ্যারে থেকে একটা একটা ভ্যালু (যেমন Audi) বের করে এনে car ভ্যারিয়েবলে স্টোর করা হবে, প্রথমে Audi স্টর হবে, এরপর Lamborghini স্টোর হবে, এরপর বুগাত্তি, এভাবে অ্যারের সবগুলা ভ্যালু স্টোর হতে থাকবে। ফলে car কে কনসোল করলে Audi, Lamborghini, bugatti এভাবে একটার পর একটা প্রিন্ট হবে

  //এই কাজটা যে শুধু অ্যারের উপর করা যায় তা না, স্ট্রিং এর উপরেও করা যায়, উদাহরন নিচে।
}

//for of loop over string
{
  let cars = "Toyota"
  for (let car of cars){
    console.log(car);
  }
}


//****************** the For in Loop ******************/

//for of লুপের সাথে for in লুপের পার্থক্য হলোঃ
// ১- for of লুপ ইউজ করব কোনো অ্যারে বা স্ট্রিং এর প্রপার্টিকে এক্সেস করার জন্য 
// ২- for in লুপ ব্যবহার করা হয় কোনো object এর প্রপার্টিকে এক্সেস করার জন্য

//Syntax
{
  let person = {fname: "Omar", lname: "Faruque", age: "30"} //this is an object
  
  // for (key in object){
  //   //code block to be executed
  // }

  //আমরা জানি for in লুপ অবজেক্ট নিয়ে কাজ করে। for in লুপ লেখার নিয়ম হলো প্রথমে for লিখে এরপর ব্রাকেটে লিখতে হবে (key in object)

  // key in object এর মধ্যে key হলো একটা ভ্যারিয়েবল যাতে অবজেক্টের key গুলো (fname, lname, etc) স্টোর হয়, অবজেক্টের key গুলোকে অব্জেক্টের প্রপার্টিও বলা হয়ে থাকে, আমরা জানি অবজেক্টকে key-value pair ও বলা হয়। এই কী-ভ্যালু পেয়ারের key গুলোকে বলা হয় প্রপার্টি, আর বাকি অংশ হল ভ্যালু ,(যেমন fname হলো প্রপার্টি/key আর Omar হলো ভ্যালু)।

  // key in object এর মধ্যে object এর জায়গায় যেই অবজেক্টের ভেতর লুপ চালানো হবে সেই অবজেক্টের নাম দিতে হবে

  // এরপর কার্লি ব্রেসে যথারীতি কোড ব্লক থাকবে
}

//Example
{
  const person = {fname: "Omar", lname: "Faruque", age: "30"}; //this is an object

  for (const key in person) {
    // console.log(key); // শুধু key কে কনসোল করলে শুধু key গুলোকেই প্রিন্ট করবে (fname, laname, age),ভ্যালু গুলাকে প্রিন্ট করবে না
    
    // console.log(person[key]); //এটাকে প্রিন্ট করলে শুধু ভ্যালু গুলাকে প্রিন্ট করবে যেমন (Omar, Faruque, 30)

    console.log(`${key}: ${person[key]}`); //এভাবে ব্যাকটিক দিয়ে কনসোল করলে key-value দুটাই প্রিন্ট হবে
  }
}

// নোটঃ for in লুপ অ্যারের উপর চালাবো না যদি ইনডেক্স অর্ডার/সিরিয়াল গুরুত্বপূর্ন হয় *******
// অ্যারে নিয়ে কাজ করার সময় for অথবা for of লুপ ইউজ করব